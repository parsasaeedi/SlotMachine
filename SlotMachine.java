import java.util.Scanner;
import java.util.Random;
import java.util.concurrent.TimeUnit;

public class SlotMachine {
    public static void main(String[] args) throws InterruptedException {
        Scanner input = new Scanner(System.in);
        Random ran = new Random();
        int tokens = 20, s1, s2, s3, choice, i;
        String game;

        System.out.println("You have " + tokens + " tokens.\n1. Pull Machine\n2. Leave");
        choice = input.nextInt();
        while (choice == 1 && tokens > 0) {
            s1 = ran.nextInt(3) + 1;
            s2 = ran.nextInt(3) + 1;
            s3 = ran.nextInt(3) + 1;



            i = 0;
            while (i < 500) {
                System.out.println(" ██╗     ██╗     ██╗            \n███║    ███║    ███║            \n╚██║    ╚██║    ╚██║            \n ██║     ██║     ██║            \n ██║     ██║     ██║            \n ╚═╝     ╚═╝     ╚═╝");
                System.out.println(" ██╗     ██╗    ██████╗         \n███║    ███║    ╚════██╗        \n╚██║    ╚██║     █████╔╝        \n ██║     ██║    ██╔═══╝         \n ██║     ██║    ███████╗        \n ╚═╝     ╚═╝    ╚══════╝");
                System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n██╔═══╝      ╚═══██╗     ╚═══██╗\n███████╗    ██████╔╝    ██████╔╝\n╚══════╝    ╚═════╝     ╚═════╝");
                System.out.println(" ██╗    ██████╗      ██╗        \n███║    ╚════██╗    ███║        \n╚██║     █████╔╝    ╚██║        \n ██║    ██╔═══╝      ██║        \n ██║    ███████╗     ██║        \n ╚═╝    ╚══════╝     ╚═╝");
                System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n██╔═══╝      ██║     ╚═══██╗    \n███████╗     ██║    ██████╔╝    \n╚══════╝     ╚═╝    ╚═════╝"); 
                System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║    ██╔═══╝     ██╔═══╝     \n ██║    ███████╗    ███████╗    \n ╚═╝    ╚══════╝    ╚══════╝");
                System.out.println(" ██╗     ██╗    ██████╗         \n███║    ███║    ╚════██╗        \n╚██║    ╚██║     █████╔╝        \n ██║     ██║     ╚═══██╗        \n ██║     ██║    ██████╔╝        \n ╚═╝     ╚═╝    ╚═════╝");
                System.out.println("██████╗     ██████╗      ██╗    \n╚════██╗    ╚════██╗    ███║    \n █████╔╝     █████╔╝    ╚██║    \n ╚═══██╗    ██╔═══╝      ██║    \n██████╔╝    ███████╗     ██║    \n╚═════╝     ╚══════╝     ╚═╝");
                System.out.println(" ██╗    ██████╗      ██╗        \n███║    ╚════██╗    ███║        \n╚██║     █████╔╝    ╚██║        \n ██║     ╚═══██╗     ██║        \n ██║    ██████╔╝     ██║        \n ╚═╝    ╚═════╝      ╚═╝");
                System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║     ╚═══██╗    ██╔═══╝     \n ██║    ██████╔╝    ███████╗    \n ╚═╝    ╚═════╝     ╚══════╝");
                System.out.println(" ██╗     ██╗    ██████╗         \n███║    ███║    ╚════██╗        \n╚██║    ╚██║     █████╔╝        \n ██║     ██║     ╚═══██╗        \n ██║     ██║    ██████╔╝        \n ╚═╝     ╚═╝    ╚═════╝");
                System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n██╔═══╝      ██║    ██╔═══╝     \n███████╗     ██║    ███████╗    \n╚══════╝     ╚═╝    ╚══════╝");
                System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║     ╚═══██╗     ╚═══██╗    \n ██║    ██████╔╝    ██████╔╝    \n ╚═╝    ╚═════╝     ╚═════╝");
                System.out.println("██████╗      ██╗     ██╗        \n╚════██╗    ███║    ███║        \n █████╔╝    ╚██║    ╚██║        \n██╔═══╝      ██║     ██║        \n███████╗     ██║     ██║        \n╚══════╝     ╚═╝     ╚═╝");
                System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n██╔═══╝      ██║    ██╔═══╝     \n███████╗     ██║    ███████╗    \n╚══════╝     ╚═╝    ╚══════╝");
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                i++;
            }


            switch (s1) {
               


                case 1:
                    switch (s2) {

                        case 1:
                            switch (s3) {

                                case 1:
                                    System.out.println(" ██╗     ██╗     ██╗            \n███║    ███║    ███║            \n╚██║    ╚██║    ╚██║            \n ██║     ██║     ██║            \n ██║     ██║     ██║            \n ╚═╝     ╚═╝     ╚═╝");
                                    break;
                                case 2:
                                    System.out.println(" ██╗     ██╗    ██████╗         \n███║    ███║    ╚════██╗        \n╚██║    ╚██║     █████╔╝        \n ██║     ██║    ██╔═══╝         \n ██║     ██║    ███████╗        \n ╚═╝     ╚═╝    ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println(" ██╗     ██╗    ██████╗         \n███║    ███║    ╚════██╗        \n╚██║    ╚██║     █████╔╝        \n ██║     ██║     ╚═══██╗        \n ██║     ██║    ██████╔╝        \n ╚═╝     ╚═╝    ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;

                        case 2:
                            switch (s3) {

                                case 1:
                                    System.out.println(" ██╗    ██████╗      ██╗        \n███║    ╚════██╗    ███║        \n╚██║     █████╔╝    ╚██║        \n ██║    ██╔═══╝      ██║        \n ██║    ███████╗     ██║        \n ╚═╝    ╚══════╝     ╚═╝");
                                    break;
                                case 2:
                                    System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║    ██╔═══╝     ██╔═══╝     \n ██║    ███████╗    ███████╗    \n ╚═╝    ╚══════╝    ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║    ██╔═══╝      ╚═══██╗    \n ██║    ███████╗    ██████╔╝    \n ╚═╝    ╚══════╝    ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;

                        case 3:
                        
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println(" ██╗    ██████╗      ██╗        \n███║    ╚════██╗    ███║        \n╚██║     █████╔╝    ╚██║        \n ██║     ╚═══██╗     ██║        \n ██║    ██████╔╝     ██║        \n ╚═╝    ╚═════╝      ╚═╝");
                                    break;
                                case 2:
                                    System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║     ╚═══██╗    ██╔═══╝     \n ██║    ██████╔╝    ███████╗    \n ╚═╝    ╚═════╝     ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println(" ██╗    ██████╗     ██████╗     \n███║    ╚════██╗    ╚════██╗    \n╚██║     █████╔╝     █████╔╝    \n ██║     ╚═══██╗     ╚═══██╗    \n ██║    ██████╔╝    ██████╔╝    \n ╚═╝    ╚═════╝     ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;
                        default:
                            break;
                    }
                    break;



                case 2:
                    switch (s2) {
                        case 1:
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println("██████╗      ██╗     ██╗        \n╚════██╗    ███║    ███║        \n █████╔╝    ╚██║    ╚██║        \n██╔═══╝      ██║     ██║        \n███████╗     ██║     ██║        \n╚══════╝     ╚═╝     ╚═╝");
                                    break;
                                case 2:
                                    System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n██╔═══╝      ██║    ██╔═══╝     \n███████╗     ██║    ███████╗    \n╚══════╝     ╚═╝    ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n██╔═══╝      ██║     ╚═══██╗    \n███████╗     ██║    ██████╔╝    \n╚══════╝     ╚═╝    ╚═════╝"); 
                                    break;
                                default:
                                    break;
                            }
                            break;

                        case 2:
                        switch (s3) {
                                
                            case 1:
                                System.out.println("██████╗     ██████╗      ██╗    \n╚════██╗    ╚════██╗    ███║    \n █████╔╝     █████╔╝    ╚██║    \n██╔═══╝     ██╔═══╝      ██║    \n███████╗    ███████╗     ██║    \n╚══════╝    ╚══════╝     ╚═╝");
                                break;
                            case 2:
                                System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n██╔═══╝     ██╔═══╝     ██╔═══╝ \n███████╗    ███████╗    ███████╗\n╚══════╝    ╚══════╝    ╚══════╝");
                                break;
                            case 3:
                                System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n██╔═══╝     ██╔═══╝      ╚═══██╗\n███████╗    ███████╗    ██████╔╝\n╚══════╝    ╚══════╝    ╚═════╝");
                                break;
                            default:
                                break;
                        }
                            break;

                        case 3:
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println("██████╗     ██████╗      ██╗    \n╚════██╗    ╚════██╗    ███║    \n █████╔╝     █████╔╝    ╚██║    \n██╔═══╝      ╚═══██╗     ██║    \n███████╗    ██████╔╝     ██║    \n╚══════╝    ╚═════╝      ╚═╝");
                                    break;
                                case 2:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n██╔═══╝      ╚═══██╗    ██╔═══╝ \n███████╗    ██████╔╝    ███████╗\n╚══════╝    ╚═════╝     ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n██╔═══╝      ╚═══██╗     ╚═══██╗\n███████╗    ██████╔╝    ██████╔╝\n╚══════╝    ╚═════╝     ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;
                        default:
                            break;
                    }
                    break;



                case 3:
                    switch (s2) {

                        case 1:
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println("██████╗      ██╗     ██╗        \n╚════██╗    ███║    ███║        \n █████╔╝    ╚██║    ╚██║        \n ╚═══██╗     ██║     ██║        \n██████╔╝     ██║     ██║        \n╚═════╝      ╚═╝     ╚═╝");
                                    break;
                                case 2:
                                    System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n ╚═══██╗     ██║    ██╔═══╝     \n██████╔╝     ██║    ███████╗    \n╚═════╝      ╚═╝    ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println("██████╗      ██╗    ██████╗     \n╚════██╗    ███║    ╚════██╗    \n █████╔╝    ╚██║     █████╔╝    \n ╚═══██╗     ██║     ╚═══██╗    \n██████╔╝     ██║    ██████╔╝    \n╚═════╝      ╚═╝    ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;

                        case 2:
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println("██████╗     ██████╗      ██╗    \n╚════██╗    ╚════██╗    ███║    \n █████╔╝     █████╔╝    ╚██║    \n ╚═══██╗    ██╔═══╝      ██║    \n██████╔╝    ███████╗     ██║    \n╚═════╝     ╚══════╝     ╚═╝");
                                    break;
                                case 2:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n ╚═══██╗    ██╔═══╝     ██╔═══╝ \n██████╔╝    ███████╗    ███████╗\n╚═════╝     ╚══════╝    ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n ╚═══██╗    ██╔═══╝      ╚═══██╗\n██████╔╝    ███████╗    ██████╔╝\n╚═════╝     ╚══════╝    ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;

                        case 3:
                            switch (s3) {
                                    
                                case 1:
                                    System.out.println("██████╗     ██████╗      ██╗    \n╚════██╗    ╚════██╗    ███║    \n █████╔╝     █████╔╝    ╚██║    \n ╚═══██╗     ╚═══██╗     ██║    \n██████╔╝    ██████╔╝     ██║    \n╚═════╝     ╚═════╝      ╚═╝");
                                    break;
                                case 2:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n ╚═══██╗     ╚═══██╗    ██╔═══╝ \n██████╔╝    ██████╔╝    ███████╗\n╚═════╝     ╚═════╝     ╚══════╝");
                                    break;
                                case 3:
                                    System.out.println("██████╗     ██████╗     ██████╗ \n╚════██╗    ╚════██╗    ╚════██╗\n █████╔╝     █████╔╝     █████╔╝\n ╚═══██╗     ╚═══██╗     ╚═══██╗\n██████╔╝    ██████╔╝    ██████╔╝\n╚═════╝     ╚═════╝     ╚═════╝");
                                    break;
                                default:
                                    break;
                            }
                            break;
                        default:
                            break;
                    }
                    break;
                default:
                    break;
            }

            TimeUnit.SECONDS.sleep((long) 1);

            if (s1 == s2 && s1 == s3) {
                System.out.println("     ██╗ █████╗  ██████╗██╗  ██╗██████╗  ██████╗ ████████╗██╗    \n     ██║██╔══██╗██╔════╝██║ ██╔╝██╔══██╗██╔═══██╗╚══██╔══╝██║    \n     ██║███████║██║     █████╔╝ ██████╔╝██║   ██║   ██║   ██║    \n██   ██║██╔══██║██║     ██╔═██╗ ██╔═══╝ ██║   ██║   ██║   ╚═╝    \n╚█████╔╝██║  ██║╚██████╗██║  ██╗██║     ╚██████╔╝   ██║   ██╗    \n ╚════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝      ╚═════╝    ╚═╝   ╚═╝ ");
                tokens = tokens + 20;
                TimeUnit.SECONDS.sleep((long) 1);
                System.out.println("Tokens: " + tokens);
            } else {
                System.out.println("██╗   ██╗ ██████╗ ██╗   ██╗    ██╗      ██████╗ ███████╗████████╗\n╚██╗ ██╔╝██╔═══██╗██║   ██║    ██║     ██╔═══██╗██╔════╝╚══██╔══╝\n ╚████╔╝ ██║   ██║██║   ██║    ██║     ██║   ██║███████╗   ██║   \n  ╚██╔╝  ██║   ██║██║   ██║    ██║     ██║   ██║╚════██║   ██║   \n   ██║   ╚██████╔╝╚██████╔╝    ███████╗╚██████╔╝███████║   ██║   \n   ╚═╝    ╚═════╝  ╚═════╝     ╚══════╝ ╚═════╝ ╚══════╝   ╚═╝ ");
                tokens--;
                TimeUnit.SECONDS.sleep((long) 1);
                // System.out.println("Tokens: " + tokens);
            }

            System.out.println("You have " + tokens + " tokens.\n1. Pull Machine\n2. Leave");
            choice = input.nextInt();
            
        }
        if (tokens == 0) {
            System.out.println("You're out of tokens");
        } else if (choice == 2) {
            System.out.println("Bye Bye! See you next time!");
        }
    }
}